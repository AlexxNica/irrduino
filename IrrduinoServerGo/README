IrrduinoServerGo
================

This is the Go version of IrrduinoServer.  It's a Go application written for
Google App Engine.

Status
------

The port from Python is about half done.  It runs, but there's a lot
of stuff that isn't implemented yet.

Running
-------

Make sure you have Google App Engine for Go SDK installed and run the following
from the current directory:

  SDK_PATH/dev_appserver.py .

If you want to setup an ssh tunnel from a public server back to your own
development server so that Irrduino can talk to your development server,
do something like:

  ssh -R \*:8080:127.0.0.1:8080 $USER@your-public-server.com

To deploy to the public server:

  SDK_PATH/appcfg.py update .

The app will be temporarily deployed to the following:

  http://2.latest.irrduinoserver.appspot.com

Configuring IrrduinoController
------------------------------

To get IrrduinoController to send us its logs, you must configure it.
To get the existing settings, go to:

  http://joefernandez.org/settings

To change it to use the default, public server, go to:

  http://joefernandez.org/settings?reportingEnabled=true&reportingHostName=irrduinoserver.appspot.com&reportingHostPort=80

To change it to use the development server (running over an ssh tunnel), go to
a slightly tweaked version of the URL below:

  http://joefernandez.org/settings?reportingEnabled=true&reportingHostName=your-public-server.com&reportingHostPort=8080

Global TODOs
------------

Grab the newest version of the CSS from IrrduinoServer.
Get rid of the LawnVille tab like IrrduinoServer.
Format the status output on the controls tab like IrrduinoServer does.
Make sure to use "irrigate" instead of "controls".
Restrict access to the server.
Remove the hostname for Joe's server from the code.

Limitations
-----------

I specifically decided not to write any tests because this is a prototype.
